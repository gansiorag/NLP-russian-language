class AnalysisErrorFio:
    alphRUS = list('БВГДЖЗКЛМНПРСТФХЦЧШЩЪЬ')
    alphRUS_G = list('АЕЁИЙОУЫЭЮЯ')
    alphRUSfull = list('БВГДЖЗКЛМНПРСТФХЦЧШЩЪЬАЕЁИЙОУЫЭЮЯ')
    alphRUSgcom = list('ЪЬЫЭ')

    def __init__(self, type_neo: str, regim: int):
        """ init class

        Args:
            type_neo (str): input value - 'surname' , 'name', 'patronymic'
            regim (int): value 1 - quiq count, 2 - full count
        """

        self.type_neo = type_neo
        self.regim = regim
        self.dict_BCDF = self.get_dict_BCDF()
        self.dict_BBB = self.get_dict_BBB()
        self.dict_BB = self.get_dict_BB()

    def get_dict_BCDF(self) -> dict:
        """
        creater dict with full combinations from 4 simbols all consonant letter 

        Returns:
            set: dict
        """

        list_alf = []
        unikum4 = set()
        for s1 in self.alphRUS:
            for s2 in self.alphRUS:
                for s3 in self.alphRUS:
                    for s4 in self.alphRUS:
                        list_alf.append(s1 + s2 + s3 + s4)
        set_alf = set(list_alf)
        if self.type_neo == 'surname':
            unikum4 = set([
                'БВРТ', 'БДКЛ', 'БДЛЛ', 'БДЛХ', 'БДРХ', 'БДРШ', 'БКДН', 'БКРД', 'БЛСВ', 'БЛЬХ',
                'БНРГ', 'БРВН', 'БРСК', 'БРЬС', 'БЦНВ', 'БЪДК', 'БЪНД', 'БЪНЗ', 'БЪРД', 'БЪЧВ',
                'БСЬК', 'БСТВ', 'БВДЬ', 'БРДР',
                'ВВСК', 'ВЗГЛ', 'ВКСК', 'ВЛВТ', 'ВЛЬН', 'ВЛЬС', 'ВЛЬЦ', 'ВЛЬЧ', 'ВНДР', 'ВНСК',
                'ВПЛЬ', 'ВРБШ', 'ВРВЖ', 'ВРВС', 'ВРКЛ', 'ВРНД', 'ВРСК', 'ВРСТ', 'ВРТК', 'ВСКВ',
                'ВСКК', 'ВСКМ', 'ВСКП', 'ВСКС', 'ВСНН', 'ВССК', 'ВСТР', 'ВСТФ', 'ВСТЬ', 'ВСЧН',
                'ВСЬК', 'ВТСР', 'ВТСТ', 'ВТЬК', 'ВЧНК', 'ВЧНН', 'ВЪЛК', 'ВЪЛЧ', 'ВЪРБ', 'ВЪРГ',
                'ВЬСВ', 'ВЬСК', 'ВМНЦ', 'ВСТВ', 'ВСТР', 'ВСТС', 'ВЛЬН', 'ВДЖЬ', 'ВКШТ', 'ВДЗЬ',
                'ВЗТД',
                'ГЛДЖ', 'ГМШК', 'ГРДЗ', 'ГСТР', 'ГЛРБ', 'ГРТД', 'ГМРЦ', 'ГГСБ', 'ГГЛЬ', 'ГРЖН',
                'ГНРМ', 'ГРСК',
                'ГВВР', 'ГВДЖ', 'ГВДЛ', 'ГВРД', 'ГВРШ', 'ГЗТД', 'ГЛВД', 'ГЛКХ',
                'ГЛЬБ', 'ГРДЖ', 'ГРДЛ', 'ГРЗН', 'ГРЬК', 'ГСТЛ', 'ГШТР',
                'ДВЛЬ', 'ДВНД', 'ДЖРБ',
                'ДЖРМ', 'ДЗГВ', 'ДЗГЛ', 'ДЗСК', 'ДКЛВ', 'ДЛЬБ', 'ДЛЬГ', 'ДЛЬМ', 'ДЛЬН', 'ДНСК',
                'ДНТК', 'ДРВС', 'ДРДЖ', 'ДРМБ', 'ДРПЛ', 'ДРХМ', 'ДРЬШ', 'ДСТВ', 'ДСТР', 'ДСЬК',
                'ДТСК', 'ДТШТ', 'ДШКР', 'ДЬСК',
                'ДЖНД', 'ДЗГВ', 'ДМТР', 'ДРТД', 'ДСКР', 'ДСТР', 'ДЬДМ', 'ДЗЬК', 'ДЗСК', 'ДЛЬЧ',
                'ДШТР', 'ДЖЗМ', 'ДЖДЖ', 'ДЖБХ', 'ДРКВ', 'ДРКЛ', 'ДЛЬС', 'ДБРК', 'ДЛЬХ', 'ДЛЬШ',
                'ЖСТД', 'ЖНСК', 'ЖССК',
                'ЗЬКР', 'ЗДЬК', 'ЗНРЗ', 'ЗЛТД',
                'ЗБРЖ', 'ЗВЗД', 'ЗВНК', 'ЗВНЦ',
                'ЗГВР', 'ЗГРЖ', 'ЗДЛВ', 'ЗДНК', 'ЗЛЬШ', 'ЗПНК', 'ЗССК', 'ЗСТР', 'ЗЬДЗ', 'ЗЬСК',
                'КВРГ', 'КВРЦ', 'КВСК', 'ККШК', 'КЛВЛ', 'КЛЦК', 'КЛЬГ', 'КЛЬН', 'КЛЬС', 'КЛЬШ',
                'КНДЖ', 'КНЬК', 'КРБК', 'КРБЧ', 'КРВЛ', 'КРВС', 'КРГЛ', 'КРКН', 'КРНД', 'КРНТ',
                'КРРЖ', 'КРСК', 'КРСМ', 'КРТЧ', 'КРТЬ', 'КРШЛ', 'КРЪС', 'КСКН', 'КСКР', 'КССК',
                'КССН', 'КСТМ', 'КТДЖ', 'КТРТ', 'КХТМ', 'КШТР', 'КЪНЧ', 'КЪРД', 'КЪРС', 'КЬНЧ',
                'КЬЧН',
                'КРДЖ', 'КРТЧ', 'КСТР', 'КСТЬ', 'КСТХ', 'КЛДР', 'КЛЧК', 'КНДР', 'КТРЧ', 'ККНД',
                'КСХМ', 'КРСТ',
                'КШТК',
                'ЛБШТ', 'ЛВСК', 'ЛДЗБ', 'ЛДЛШ', 'ЛДРШ', 'ЛДСМ', 'ЛДСТ', 'ЛДШЛ', 'ЛЗДН',
                'ЛКЗН', 'ЛКЛВ', 'ЛКНК', 'ЛКТН', 'ЛКХТ', 'ЛЛВЬ', 'ЛЛГР', 'ЛЛСТ', 'ЛЛХВ', 'ЛЛЬБ',
                'ЛЛЬВ', 'ЛЛЬГ', 'ЛЛЬД', 'ЛЛЬК', 'ЛЛЬХ', 'ЛМКВ', 'ЛМПП', 'ЛНСК', 'ЛНТЬ', 'ЛПДЖ',
                'ЛПСК', 'ЛПСП', 'ЛПШВ', 'ЛРВС', 'ЛРВЬ', 'ЛРХМ', 'ЛССТ', 'ЛСТВ', 'ЛСТН', 'ЛСТР',
                'ЛСТЬ', 'ЛТГР', 'ЛТКН', 'ЛТСК', 'ЛФСР', 'ЛЬБК', 'ЛЬБР', 'ЛЬБФ', 'ЛЬБХ', 'ЛЬБЬ',
                'ЛЬВБ', 'ЛЬВЛ', 'ЛЬВН', 'ЛЬВС', 'ЛЬВЬ', 'ЛЬГБ', 'ЛЬГЛ', 'ЛЬГМ', 'ЛЬГН', 'ЛЬГР',
                'ЛЬГС', 'ЛЬГТ', 'ЛЬГХ', 'ЛЬДГ', 'ЛЬДЖ', 'ЛЬДС', 'ЛЬДТ', 'ЛЬДФ', 'ЛЬДЦ', 'ЛЬДЧ',
                'ЛЬДШ', 'ЛЬДЬ', 'ЛЬЖД', 'ЛЬЗВ', 'ЛЬЗК', 'ЛЬЗМ', 'ЛЬКХ', 'ЛЬКШ', 'ЛЬКЬ', 'ЛЬЛЬ',
                'ЛЬМБ', 'ЛЬМЗ', 'ЛЬМК', 'ЛЬМЛ', 'ЛЬММ', 'ЛЬМН', 'ЛЬМР', 'ЛЬМС', 'ЛЬМТ', 'ЛЬМХ',
                'ЛЬМШ', 'ЛЬМЬ', 'ЛЬНБ', 'ЛЬНВ', 'ЛЬНГ', 'ЛЬНН', 'ЛЬНС', 'ЛЬНТ', 'ЛЬНФ', 'ЛЬНЦ',
                'ЛЬНЧ', 'ЛЬНЬ', 'ЛЬПБ', 'ЛЬПР', 'ЛЬПТ', 'ЛЬПЬ', 'ЛЬРМ', 'ЛЬРХ', 'ЛЬСВ', 'ЛЬСГ',
                'ЛЬСК', 'ЛЬСТ', 'ЛЬСХ', 'ЛЬСЬ', 'ЛЬТБ', 'ЛЬТВ', 'ЛЬТГ', 'ЛЬТЖ', 'ЛЬТЗ', 'ЛЬТЛ',
                'ЛЬТС', 'ЛЬТТ', 'ЛЬТХ', 'ЛЬТЧ', 'ЛЬТШ', 'ЛЬФВ', 'ЛЬФГ', 'ЛЬФЗ', 'ЛЬФЛ', 'ЛЬФП',
                'ЛЬФС', 'ЛЬФТ', 'ЛЬХЛ', 'ЛЬХМ', 'ЛЬХН', 'ЛЬХР', 'ЛЬЦГ', 'ЛЬЦЗ', 'ЛЬЦК', 'ЛЬЦЛ',
                'ЛЬЦН', 'ЛЬЦТ', 'ЛЬЦФ', 'ЛЬЦХ', 'ЛЬЦШ', 'ЛЬЧМ', 'ЛЬЧН', 'ЛЬШБ', 'ЛЬШД', 'ЛЬШЛ',
                'ЛЬШМ', 'ЛЬШП', 'ЛЬШР', 'ЛЬШС', 'ЛЬШТ',
                'ЛВШН', 'ЛГСК', 'ЛКСН', 'ЛМСК', 'ЛМСТ', 'ЛМТД', 'ЛНЬК', 'ЛППТ', 'ЛЬБЛ', 'ЛЬБР',
                'ЛЬДБ', 'ЛЬДЖ', 'ЛЬДЗ', 'ЛЬДМ', 'ЛЬДР', 'ЛЬДФ', 'ЛЬДШ', 'ЛЬТД', 'ЛЬФС', 'ЛЬФМ',
                'ЛЬТР', 'ЛСЬК', 'ЛЬКН', 'ЛЬМС', 'ЛЬЗБ', 'ЛЬКВ', 'ЛЬКМ', 'ЛЬМБ', 'ЛЬЧК', 'ЛЬКС',
                'ЛЬГР', 'ЛЬФК', 'ЛЬБШ', 'ЛЬМГ', 'ЛЛЬМ', 'ЛЬБС', 'ЛЬНК', 'ЛЬСБ', 'ЛЬСК', 'ЛЬСТ',
                'ЛЬТБ', 'ЛЬТМ', 'ЛЬТЦ', 'ЛЬТШ', 'ЛЬФГ', 'ЛЬФШ', 'ЛЬЦМ', 'ЛЬДТ', 'ЛЬШК', 'ЛЬШТ',
                'ЛШТР', 'ЛЬДВ', 'ЛЬДН', 'ЛЬКЛ', 'ЛЬШВ', 'ЛЬДХ', 'ЛЛЬС', 'ЛЬСЛ', 'ЛЬФБ', 'ЛЬСС',
                'ЛЬДЛ', 'ЛДЬК', 'ЛЬФР', 'ЛЬСД', 'ЛЬЗН', 'ЛЬТГ', 'ЛЬДГ', 'ЛКШК', 'ЛЬЦВ', 'ЛВРЦ',
                'ЛДСВ', 'ЛЬШН', 'ЛЬДС', 'ЛЬДК', 'ЛЬТК', 'ЛЛЬН', 'ЛЬФЦ', 'ЛЬЦК', 'ЛЬЦБ', 'ЛЬСН',
                'ЛМРБ', 'ЛЖСК', 'ЛЬЗД', 'ЛДЬГ', 'ЛЬМД', 'ЛКСТ', 'ЛДВШ', 'ЛЬМТ', 'ЛЬСП', 'ЛКСС',
                'ЛЬКР', 'ЛЛЬР', 'ЛЬТН', 'ЛЬТЬ', 'ЛЬТФ', 'ЛЬСМ', 'ЛЛСВ',
                'МКРТ', 'МЛЬН', 'МСТР', 'МКРЧ', 'МЧШК', 'МКТР', 'МКРЗ', 'МССК', 'МЦХВ', 'МКРД',
                'МБМР', 'МБСК',
                'МБРЖ', 'МПФЛ', 'МРДЖ', 'МРКТ', 'МГВД',
                'МВРК', 'МВРТ', 'МВСК', 'МВСЛ', 'МВТВ',
                'МГВД', 'МДЖЬ', 'МДЗГ', 'МКМН', 'МКРТ', 'МКТГ', 'МКТЧ', 'МЛМП', 'МЛХВ', 'МЛЬД',
                'ММРН', 'МНСК', 'МНТЬ', 'МПСК', 'МСКВ', 'МСТД', 'МСТК', 'МСТХ', 'МЧНЦ',
                'НБНР',
                'НВСК', 'НГГЛ', 'НГДЖ', 'НГКЛ', 'НГКР', 'НГКС', 'НГКХ', 'НГЛД', 'НГПХ', 'НГРБ',
                'НГРВ', 'НГСБ', 'НГСК', 'НГСМ', 'НГСР', 'НГСТ', 'НГСХ', 'НГТС', 'НГТХ', 'НГХН',
                'НГШТ', 'НГЪР', 'НДДЖ', 'НДЖБ', 'НДЖЛ', 'НДЖН', 'НДЖШ', 'НДЖЬ', 'НДЗБ', 'НДЗК',
                'НДЗР', 'НДЗС', 'НДЗЬ', 'НДКР', 'НДЛБ', 'НДМС', 'НДРК', 'НДРЛ', 'НДРР', 'НДРС',
                'НДРХ', 'НДРЦ', 'НДРЧ', 'НДРЬ', 'НДСБ', 'НДСК', 'НДТЛ', 'НДТН', 'НДТЦ', 'НДФЛ',
                'НДХР', 'НКНВ', 'НКНК', 'НКРВ', 'НКРЖ', 'НКСН', 'НКТР', 'НКФР', 'НКЬК', 'НЛЬН',
                'ННСК', 'ННТЬ', 'ННЦК', 'ННЬШ', 'НРСК', 'НРСТ', 'НСКВ', 'НСКК', 'НСКЛ', 'НСКМ',
                'НСКС', 'НСКТ', 'НССК', 'НССЬ', 'НСТВ', 'НСТД', 'НСТК', 'НСТС', 'НТДЖ', 'НТДЬ',
                'НТЬК', 'НТЬТ', 'НФСК', 'НФТЛ', 'НЦНВ', 'НЦФР', 'НЧДЖ', 'НЧНК', 'НШПР', 'НЬВЬ',
                'НЬКМ', 'НЬКН', 'НЬТК', 'НЬТЬ', 'НЬЦЗ', 'НЬШК', 'НЬШН', 'НЬШТ',
                'НГРН', 'НГСЛ', 'НГСТ', 'НДЖВ', 'НДСТ', 'НДШП', 'ННДР', 'НДРЖ', 'НЧКК', 'НСТР',
                'НДРБ', 'НДСФ', 'ННСТ', 'НДЖГ', 'НКСТ', 'НКШТ', 'НСТН', 'НТНЛ', 'НЦКЛ', 'НДКВ',
                'НТШТ', 'НДГР', 'НГЛЬ', 'НГРЖ', 'НДЖР', 'НСЛЬ', 'НДЛЬ', 'НТШК', 'НЬЧК', 'НСТВ',
                'НКШК', 'НБШК', 'НГБЛ', 'НКСМ', 'НТЬВ', 'НСЬК', 'НДШТ', 'НСТЛ', 'НГПР',
                'НДНР', 'НЬСК', 'НДСМ', 'НГХВ', 'НГКВ', 'НСТМ', 'НДТК', 'НШТР', 'НЦШТ', 'НГРС',
                'НДБЛ', 'НДЬМ', 'НЬДЗ',
                'НГБР', 'НКСК', 'НТСК',
                'ПВСК', 'ПЗДН',
                'ПКТР', 'ПКЪН', 'ПЛЗД', 'ПЛТН', 'ПЛЬС', 'ПЛЬЧ', 'ПЛЬШ', 'ПНДЖ', 'ПНДР', 'ПНКР',
                'ПНТР', 'ППЛВ', 'ППСК', 'ПРВС', 'ПРПЛ', 'ПРСТ', 'ПСТР', 'ПСЬК', 'ПТСК', 'ПЪРВ',
                'ПЬНК', 'ППРШ', 'ПРСК', 'ПШБЖ', 'ПРЦК',
                'РБВК', 'РБВН', 'РБДЖ', 'РБЧК', 'РБШТ', 'РВБК', 'РВЖН', 'РВСК', 'РГГР',
                'РГКВ', 'РГКН', 'РГРЦ', 'РГШТ', 'РДГР', 'РДЖГ', 'РДЖМ', 'РДЗВ', 'РДЗГ', 'РДЗН',
                'РДСК', 'РДСЛ', 'РДСС', 'РДСТ', 'РЗВК', 'РЗДР', 'РЗСК', 'РЗТД', 'РКГР', 'РКДЖ',
                'РКДЬ', 'РКНК', 'РКРВ', 'РКСК', 'РКСН', 'РКСС', 'РКСТ', 'РКТЬ', 'РКЧК', 'РЛПМ',
                'РЛРВ', 'РЛСБ', 'РЛСВ', 'РЛЬБ', 'РЛЬС', 'РЛЬЦ', 'РЛЬШ', 'РМБР', 'РМШТ', 'РНВШ',
                'РНГР', 'РНДЖ', 'РНКВ', 'РНРВ', 'РНРК', 'РНСБ', 'РНСВ', 'РНСГ', 'РНТГ', 'РНТЬ',
                'РНЦК', 'РНЬШ', 'РПНК', 'РПРВ', 'РПСТ', 'РПТС', 'РРРР', 'РРСК', 'РСКВ', 'РСКК',
                'РСКС', 'РССК', 'РССТ', 'РСТБ', 'РСТВ', 'РСТН', 'РСТС', 'РСТЬ', 'РСШН', 'РТВН',
                'РТКЛ', 'РТКМ', 'РТСВ', 'РТСЛ', 'РТСН', 'РТСТ', 'РТЧЬ', 'РТШВ', 'РТШК', 'РТЬМ',
                'РТЬН', 'РФШТ', 'РХГР', 'РХМП', 'РХСК', 'РХТД', 'РХТП', 'РЦБР', 'РЦРВ', 'РШБР',
                'РШКЛ', 'РШКН', 'РШКР', 'РШТЛ', 'РШТМ', 'РШТН', 'РШТР', 'РЪКЧ', 'РЪСТ', 'РЬБЬ',
                'РЬКВ', 'РЬСК', 'РЬТЬ', 'РЬЧК', 'РЬЧН', 'РЬШН',
                'РГВЛ', 'РКШТ', 'РНСТ', 'РМСБ', 'РСТВ', 'РЛСТ', 'РЖХН', 'РСТМ', 'РСЬК', 'РГЗД',
                'РЦБЛ', 'РКШН', 'РТДЖ', 'РНШТ', 'РСТК', 'РСТЛ', 'РСТН', 'РТСМ', 'РЦХВ', 'РХТР',
                'РЛШТ', 'РЛЬМ', 'РЖГВ', 'РДШТ', 'РТШТ', 'РЖБЛ', 'РМСТ', 'РБСК', 'РЗДН', 'РКНЦ',
                'РНБЛ', 'РМСК', 'РГСД', 'РТЬЛ', 'РНДТ', 'РТЦФ', 'РТСК', 'РБСТ', 'РГСЬ', 'РШФЛ',
                'РГШТ', 'РГСН', 'РВСК', 'РГСТ', 'РФХМ', 'РСТР', 'РЗНК', 'РЦШТ', 'РЛЬЗ', 'РХМБ',
                'РКСЛ', 'РЛЬТ', 'РТЬК', 'РНДЛ', 'РКТЧ', 'РДЖВ', 'РРХМ', 'РГСК', 'РЖСК', 'РНСК',
                'СВЛЬ', 'СВМР', 'СВМС', 'СВРК',
                'СВСК', 'СВФР', 'СКВК', 'СКВЛ', 'СКВР', 'СКЛЛ', 'СКНД', 'СКНК', 'СКРБ', 'СКРВ',
                'СКРЖ', 'СКСК', 'СКТР', 'СЛВН', 'СЛВС', 'СЛНК', 'СЛЬК', 'СЛЬС', 'СМЛЬ', 'СММР',
                'СМРЧ', 'СМТР', 'СНТД', 'СНТК', 'СПМР', 'СПМС', 'СПТР', 'СРДЖ', 'СРНД', 'СРСТ',
                'СРТТ', 'ССКР', 'СССК', 'ССТР', 'ССШТ', 'СТБР', 'СТВВ', 'СТВЛ', 'СТВН', 'СТВФ',
                'СТКБ', 'СТКЛ', 'СТКП', 'СТНП', 'СТНР', 'СТПК', 'СТПР', 'СТРБ', 'СТРВ', 'СТРГ',
                'СТРК', 'СТРЛ', 'СТРН', 'СТРТ', 'СТРЦ', 'СТРЧ', 'СТРШ', 'СТСК', 'СТСР', 'СТСС',
                'СТЧК', 'СТЬМ', 'СТЬН', 'СТЬТ', 'СХТД', 'СЧНН', 'СЪБЧ', 'СЪРБ', 'СЬКЛ', 'СЬЛЬ',
                'СЬСК', 'СЬТК', 'СЬТЬ', 'СМНК', 'СМРН', 'ССТР', 'СКРК', 'СКРД', 'СНХЧ', 'СРТД',
                'СТЬН', 'СТРЬ', 'СЛЬТ', 'СНДЖ', 'СМПР', 'СТСК', 'СТЛЬ', 'СТРЖ', 'СТРМ', 'СТЬК',
                'СЦРЖ', 'СКСН', 'СТРХ', 'СТФР', 'СПРЖ', 'СПРС', 'СТГР',
                'ТВРТ', 'ТВСК', 'ТВТН', 'ТДМН', 'ТДТН', 'ТКРЛ', 'ТННК',
                'ТНРВ', 'ТНСК', 'ТНТК', 'ТНЦК', 'ТНШТ', 'ТРЖЦ', 'ТРКТ', 'ТРЛЬ', 'ТРНК', 'ТРРФ',
                'ТРСК', 'ТРТЧ', 'ТРТЬ', 'ТСТК', 'ТСТР', 'ТСХВ', 'ТТСС', 'ТХЛБ', 'ТХТД', 'ТХТХ',
                'ТЦДЖ', 'ТЦХЬ', 'ТШПР', 'ТЬКВ', 'ТЬМЬ', 'ТЬСК', 'ТЬТК', 'ТЬЧН',
                'ТСЛК', 'ТТМБ', 'ТРДЖ', 'ТТФР', 'ТТШН',
                'ФЛДЖ', 'ФМЛМ', 'ФМРС', 'ФРНД', 'ФСТР', 'ФТДЖ',
                'ХБВН', 'ХВРД', 'ХВРЧ', 'ХВСК', 'ХЛДЖ', 'ХЛХЛ', 'ХММД', 'ХСТД', 'ХТШН', 'ХТШТ',
                'ХШТР', 'ХЪНС', 'ХРТД', 'ХТШМ', 'ХТБЛ', 'ХНСЛ', 'ХЛЬБ',
                'ЧКНК', 'ЧКРН', 'ЧКРС', 'ЧМСТ', 'ЧННК', 'ЧНРН', 'ЧРСК', 'ЧТСТ', 'ЧКРК', 'ЧНГР',
                'ШТЦР', 'ШКНД', 'ШКМН', 'ШКНВ', 'ШКРБ', 'ШКРВ', 'ШКРТ', 'ШКТН',
                'ШКЧК', 'ШЛНК', 'ШЛНС', 'ШЛЬВ', 'ШЛЬД', 'ШЛЬМ', 'ШЛЬН', 'ШНРС', 'ШНРЧ', 'ШНСК',
                'ШТРБ', 'ШТРЛ', 'ШТСК', 'ЩКРБ', 'ЩНРБ', 'ЩЪРК',
                'ЪНДЖ', 'ЪНСК', 'ЪРДЖ', 'ЬБФЛ',
                'ЬВСК', 'ЬГТН', 'ЬДГР', 'ЬДЖГ', 'ЬДСК', 'ЬДСМ', 'ЬДФЛ', 'ЬДШВ', 'ЬДЬК', 'ЬКЛВ',
                'ЬКТН', 'ЬКШТ', 'ЬМБР', 'ЬМКВ', 'ЬМСК', 'ЬМТД', 'ЬМШТ', 'ЬНСК', 'ЬНТК', 'ЬНЦК',
                'ЬНЬК', 'ЬСКК', 'ЬСКТ', 'ЬСТВ', 'ЬСЬК', 'ЬТБР', 'ЬТГР', 'ЬФГР', 'ЬФСБ', 'ЬФСК',
                'ЬФТР', 'ЬЦЛЬ', 'ЬЦНВ', 'ЬЦШТ', 'ЬДФР', 'ЬДШТ', 'ЬСТР', 'ЬКСТ', 'ЬФШТ', 'ЬДШЛ',
                'ЬБШП', 'ЬМГР', 'ЬДЖН', 'ЬБСТ', 'ЬССК', 'ЬДБЛ', 'ЬКСН',
                'ЬТШТ', 'ЬДСТ', 'ЬМСТ', 'ЬДКР', 'ЬДШМ', 'ЬДЗБ', 'ЬЦБЛ', 'ЬДБМ', 'ЬКСД', 'ЬШТР',
                'ЬДБР'])

        if self.type_neo == 'name':
            unikum4 = set([
                'БЗДЖ', 'БДДС', 'БДКЛ',
                'ВСТР',
                'ГНДЗ', 'ГЛЬН', 'ГЛЬС', 'ГЛЖГ', 'ГЛЬЧ',
                'КСТР', 'КРТЧ', 'КПРД', 'КМРЗ',
                'ЛЬБР', 'ЛЬФР', 'ЛЬДЖ', 'ЛЬФГ', 'ЛЬЖБ', 'ЛНДР', 'ЛЬТР', 'ЛЬДТ', 'ЛЬСТ', 'ЛЬШР',
                'ЛЬГН', 'ЛЬТМ', 'ЛЬГБ', 'ЛЬФШ', 'ЛЬГР', 'ЛДЛК', 'ЛЬДН',
                'МКРТ',
                'НЬЦЗ', 'НДРЖ', 'НГСЛ', 'НДЛЬ', 'НДРК', 'НВЗГ', 'НЗСБ', 'НЬЧЖ', 'НГДЖ', 'НМЛШ',
                'НЬДЖ', 'НГЖВ',
                'ПНДЖ', 'ПДЛЬ', 'ПРДЖ',
                'РЛЬЗ', 'РНСТ', 'РМБР', 'РХПН', 'РСТК',
                'СТЛЬ', 'СТНБ', 'СВДР', 'СРДЖ'])

        if self.type_neo == 'patronymic':
            unikum4 = set([
                'БДЛХ', 'БРДР',
                'ВСТР',
                'ДЖКМ', 'ДРТД', 'ДЛЬБ',
                'ЗРЛЛ',
                'ЛЬБР', 'ЛЬФР', 'ЛЬМХ', 'ЛЬДЖ', 'ЛЬГЗ', 'ЛЬНЗ', 'ЛЬПХ', 'ЛЬЗБ', 'ЛЬФГ', 'ЛЬСК',
                'ЛЬТХ',
                'ЛМКР',
                'КРТЧ', 'КТРЖ',
                'МКРТ', 'МКРЧ', 'МРКТ', 'МКРД', 'МБТЛ',
                'НГЛМ', 'НТДР', 'НЬЧЖ', 'НВВЛ', 'НСТЛ',
                'РНСТ', 'РЛЬЗ', 'РНДТ', 'РШТХ', 'РТЦР',
                'СРЛЛ', 'СРДЖ', 'СТТС', 'СТСТ',
                'ТТСТ',
                'ХРТД'])

        set_alf = set_alf.difference(unikum4)
        dict_alf = dict.fromkeys(set_alf, '')
        return dict_alf

    def get_dict_BBB(self) -> dict:
        """
                creater dict with unicum combinations from 3 simbols all consonant letter 

        Returns:
            dict: dict_BBB
        """
        dict_BBB = {}
        for s1 in self.alphRUSfull:
            dict_BBB[s1 + s1 + s1] = ''
        for s1 in self.alphRUS_G:
            dict_BBB[s1 + s1 + s1] = ''
        for s1 in self.alphRUS:
            for s2 in self.alphRUS:
                dict_BBB[s1 + 'Ъ' + s2] = ''
        return dict_BBB

    def get_dict_BB(self) -> dict:
        """
                creater dict with unicum combinations from 2 simbols all consonant letter 
        Returns:
            dict: dd
        """

        dict_BB = dict.fromkeys(
            set(['ЪЪ', 'ЬЬ', 'ЪЬ', 'ЬЪ', 'ЫЫ', 'ЙЙ', 'ЁЁ']), '')
        return dict_BB

    def fragm_word(self, word: str, step: int) -> list:
        """ 
        creater list with all fragments word from diferent number simbols 

        Args:
            word (str): word
            step (int): value fragent

        Returns:
            list: ff
        """

        ff = []
        for k in range(len(word)-step+1):
            fr_str = word[k: k+step]
            ff.append(fr_str)
        return ff

    def find_error(self, word: str) -> dict:
        """
        find error fragments
        Args:
            word (str): word not null string in kirillic upper simbols

        Returns:
            dict: answer = {'error_fr_4': error_fr_4, - list error fragments 4 simbols
                            'error_fr_3': error_fr_3, - list error fragments 3 simbols
                            'error_fr_2': error_fr_2} - list error fragments 2 simbols
        """
        print(word)
        list_frag_4 = self.fragm_word(word, 4)
        print(list_frag_4)
        error_fr_4 = []
        for fr in list_frag_4:
            if fr in self.dict_BCDF:
                if self.regim == 1:
                    error_fr_4.append(fr)
                    break
                elif self.regim == 2:
                    error_fr_4.append(fr)

        list_frag_3 = self.fragm_word(word, 3)
        error_fr_3 = []
        for fr3 in list_frag_3:
            if fr3 in self.dict_BBB:
                if self.regim == 1:
                    error_fr_3.append(fr3)
                    break
                elif self.regim == 2:
                    error_fr_3.append(fr3)

        list_frag_2 = self.fragm_word(word, 2)
        error_fr_2 = []
        for fr2 in list_frag_2:
            if fr2 in self.dict_BB:
                if self.regim == 1:
                    error_fr_2.append(fr2)
                    break
                elif self.regim == 2:
                    error_fr_2.append(fr2)

        answer = {'error_fr_4': error_fr_4,
                  'error_fr_3': error_fr_3,
                  'error_fr_2': error_fr_2}

        return answer

    def analysis_error_in_word(self, word: str):
        """
        base function get result of analyses word 

        Args:
            word (str): word not null string in kirillic simbols

        Returns:
            _type_:  dict rez_dict
                    rez_dict = {'error_fr_4': error_fr_4, - list error fragments 4 simbols
                            'error_fr_3': error_fr_3, - list error fragments 3 simbols
                            'error_fr_2': error_fr_2} - list error fragments 2 simbols
        """

        word_an = word.upper()
        rez_dict = self.find_error(word_an)
        return rez_dict


if __name__ == '__main__':
    name = AnalysisErrorFio('name', 1)
    surname = AnalysisErrorFio('surname', 1)
    patronymic = AnalysisErrorFio('patronymic', 1)
    print(name.analysis_error_in_word('встпро'))
    print(surname.analysis_error_in_word('встпро'))
    print(patronymic.analysis_error_in_word('встпро'))
